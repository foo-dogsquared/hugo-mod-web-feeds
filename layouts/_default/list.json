{
    "version": "https://jsonfeed.org/version/1.1",
    "title": "{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}{{ end }}",
    "home_page_url": "{{ "" | absLangURL }}",
    "feed_url": "{{ with .OutputFormats.Get "json" }}{{ .Permalink }}{{ end }}",
    "description": "Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}", 
    "authors":
    {{- $.Scratch.Add "authors" slice -}}
    {{- range .Site.Author }}
        {{- $author := newScratch -}}
        {{- with .name }}{{ $author.Add "name" . }}{{ end -}}
        {{- with .url }}{{ $author.Add "url" . }}{{ end -}}
        {{- with .img }}{{ $author.Add "img" . }}{{ end -}}
        {{- $.Scratch.Add "authors" $author.Values -}}
    {{- end }}
    {{- $.Scratch.Get "authors" | jsonify -}},
    "items":
        {{- $limit := cond (gt .Site.Config.Services.RSS.Limit 0) .Site.Config.Services.RSS.Limit 10 -}}

        {{ $pages := .Pages }}
        {{ if .IsHome }}
        {{ $pages = where $.Site.RegularPages "Type" "in" $.Site.Params.mainSections }}
        {{ end }}
        {{- $.Scratch.Add "items" slice -}}
        {{ range first $limit $pages }}
            {{- $.Scratch.Add "items" (dict "id" .Permalink "url" .Permalink "title" .Title "summary" (.Summary | safeHTML) "content_html" (.Content | safeHTML) "tags" .Params.tags "date_published" (.Date.Format "2006-01-02T15:04:05Z07:00"  | safeHTML) "date_modified" ( .Lastmod.Format "2006-01-02T15:04:05Z07:00"  | safeHTML ) ) -}}
        {{- end -}}
        {{- $.Scratch.Get "items" | jsonify -}}
}
